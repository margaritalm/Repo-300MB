 package PackageNo1046420672; public class add_asset_jspf {  /* 1 */ private String _getClassName(String className) { /* 71 */ 	int pos = className.indexOf(AssetUtil.CLASSNAME_SEPARATOR); /* 72 */ 	if (pos != -1) { /* 74 */ 		className = className.substring(0, pos); /* 75 */ 	} /* 76 */ 	return className; /* 78 */ } /* 79 */ private String _getMessage(String className, Map<String, PortletURL> addPortletURLs, Locale locale) { /* 81 */ 	String message = null; /* 82 */ 	int pos = className.indexOf(AssetUtil.CLASSNAME_SEPARATOR); /* 84 */ 	if (pos != -1) { /* 86 */ 		message = className.substring(pos + AssetUtil.CLASSNAME_SEPARATOR.length()); /* 87 */ 		className = className.substring(0, pos); /* 89 */ 	} /* 90 */ 	AssetRendererFactory assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className); /* 92 */ 	if (pos == -1) { /* 94 */ 		message = assetRendererFactory.getTypeName(locale); /* 95 */ 	} /* 96 */ 	return message; /* 98 */ } /* 99 */ private String _getURL(long groupId, long plid, PortletURL addPortletURL, String message, boolean defaultAssetPublisher, Layout layout, PageContext pageContext, LiferayPortletResponse liferayPortletResponse) { /* 101 */ 	addPortletURL.setParameter("groupId", String.valueOf(groupId)); /* 102 */ 	addPortletURL.setParameter("showHeader", Boolean.FALSE.toString()); /* 103 */ 	String addPortletURLString = addPortletURL.toString(); /* 105 */ 	addPortletURLString = HttpUtil.addParameter(addPortletURLString, "doAsGroupId", groupId); /* 107 */ 	addPortletURLString = HttpUtil.addParameter(addPortletURLString, "refererPlid", plid); /* 108 */ 	if (defaultAssetPublisher) { /* 110 */ 		addPortletURLString = HttpUtil.addParameter(addPortletURLString, "layoutUuid", layout.getUuid()); /* 111 */ 	} /* 112 */ 	return "javascript:Liferay.Util.openWindow({dialog: {destroyOnHide: true}, id: '" + liferayPortletResponse.getNamespace() + "editAsset', title: '" + HtmlUtil.escapeJS(LanguageUtil.format((HttpServletRequest)pageContext.getRequest(), "new-x", HtmlUtil.escape(message), false)) + "', uri: '" + HtmlUtil.escapeJS(addPortletURLString) + "'});"; /* 114 */ } /* 115 */  public void Checkmarx_Class_Init(HttpServletRequest request, HttpServletResponse response, HttpSession session, ServletContext application, PageContext pageContext) {jspInit();




















     			Set<Map.Entry<String, PortletURL>> addPortletURLsSet = addPortletURLs.entrySet();
     
     			Iterator<Map.Entry<String, PortletURL>> iterator = addPortletURLsSet.iterator();
     
     			Map.Entry<String, PortletURL> entry = iterator.next();
     
     			AssetRendererFactory assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(_getClassName(entry.getKey()));
     
     			String message = _getMessage(entry.getKey(), addPortletURLs, locale);
     			


    response.write( _getURL(groupId, plid, entry.getValue(), message, defaultAssetPublisher, layout, pageContext, liferayPortletResponse) );
    response.write( assetRendererFactory.getIconCssClass() );
       response.write( assetRendererFactory.getIconPath(liferayPortletRequest) );
     response.write( LanguageUtil.format(request, (groupIds.length == 1) ? "add-x" : "add-x-in-x", new Object [] {HtmlUtil.escape(message), HtmlUtil.escape((GroupLocalServiceUtil.getGroup(groupId)).getDescriptiveName(locale))}, false) );




response.write( true )+response.write(request.getAttribute(" true "));

     response.write( LanguageUtil.format(request, (groupIds.length == 1) ? "add-new" : "add-new-in-x", HtmlUtil.escape((GroupLocalServiceUtil.getGroup(groupId)).getDescriptiveName(locale)), false) );


 
     				for (Map.Entry<String, PortletURL> entry : addPortletURLs.entrySet()) {
     					AssetRendererFactory assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(_getClassName(entry.getKey()));
     
     					String message = _getMessage(entry.getKey(), addPortletURLs, locale);
     				


      response.write( _getURL(groupId, plid, entry.getValue(), message, defaultAssetPublisher, layout, pageContext, liferayPortletResponse) );
      response.write( assetRendererFactory.getIconCssClass() );
 response.write( assetRendererFactory.getIconPath(liferayPortletRequest) );
       response.write( HtmlUtil.escape(message) );


 
     				}
     				
}

}
