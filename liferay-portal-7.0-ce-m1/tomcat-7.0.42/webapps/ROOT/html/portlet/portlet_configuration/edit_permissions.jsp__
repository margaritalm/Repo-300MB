 package PackageNo1415117303;import _html_portlet_init_jsp;import _html_portlet_portlet_configuration_init_ext_jsp;import com.liferay.portal.LARFileException;import com.liferay.portal.LARFileSizeException;import com.liferay.portal.LARTypeException;import com.liferay.portal.NoSuchPortletItemException;import com.liferay.portal.NoSuchResourceException;import com.liferay.portal.PortletIdException;import com.liferay.portal.PortletItemNameException;import com.liferay.portal.ResourcePrimKeyException;import com.liferay.portal.kernel.lar.ExportImportDateUtil;import com.liferay.portal.kernel.lar.ExportImportHelper;import com.liferay.portal.kernel.lar.ExportImportHelperUtil;import com.liferay.portal.kernel.lar.PortletDataContext;import com.liferay.portal.kernel.lar.PortletDataContextFactoryUtil;import com.liferay.portal.kernel.lar.PortletDataException;import com.liferay.portal.kernel.lar.UserIdStrategy;import com.liferay.portal.kernel.portlet.PortletModeFactory;import com.liferay.portal.kernel.settings.ArchivedSettings;import com.liferay.portal.kernel.util.DateRange;import com.liferay.portal.kernel.util.FriendlyURLNormalizerUtil;import com.liferay.portal.lar.backgroundtask.PortletExportBackgroundTaskExecutor;import com.liferay.portal.lar.backgroundtask.PortletImportBackgroundTaskExecutor;import com.liferay.portal.lar.backgroundtask.PortletStagingBackgroundTaskExecutor;import com.liferay.portal.service.permission.TeamPermissionUtil;import com.liferay.portal.util.ResourcePermissionUtil;import com.liferay.portlet.PortletQNameUtil;import com.liferay.portlet.backgroundtask.util.comparator.BackgroundTaskComparatorFactoryUtil;import com.liferay.portlet.dynamicdatalists.RecordSetDuplicateRecordSetKeyException;import com.liferay.portlet.dynamicdatamapping.StructureDuplicateStructureKeyException;import com.liferay.portlet.portletconfiguration.action.ActionUtil;import com.liferay.portlet.portletconfiguration.action.ExportImportAction;import com.liferay.portlet.portletconfiguration.util.PublicRenderParameterConfiguration; public class edit_permissions_jsp {  public void Checkmarx_Class_Init(HttpServletRequest request, HttpServletResponse response, HttpSession session, ServletContext application, PageContext pageContext) {jspInit();















/* ?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\edit_permissions.jsp */ /* 17?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\edit_permissions.jsp */ /* 1?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 2?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 3?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 4?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 5?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 6?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 7?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 8?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 9?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 10?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 11?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 12?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 13?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 14?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 15?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 16?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 17?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 18?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 19?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 20?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 21?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 22?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 23?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 24?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 25?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 26?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 27?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 28?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 29?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 30?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 31?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 32?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 33?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 34?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 35?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 36?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 37?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 38?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 39?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 40?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 41?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 42?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 43?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 44?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 45?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 46?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 47?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 48?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 49?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 50?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 51?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ PortalPreferences portalPreferences = PortletPreferencesFactoryUtil.getPortalPreferences(request); /* 52?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 53?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ String portletResource = ParamUtil.getString(request, "portletResource"); /* 54?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 55?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ Portlet selPortlet = PortletLocalServiceUtil.getPortletById(company.getCompanyId(), portletResource); /* 56?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 57?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ Format dateFormatDateTime = FastDateFormatFactoryUtil.getDateTime(locale, timeZone); /* 58?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 59?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 60?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ /* 61?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\init.jsp */ response.write(CxResponseWrite)+response.write(request.getAttribute("CxResponseWrite")); /* 17?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\portlet_configuration\edit_permissions.jsp */

     
     String tabs2 = ParamUtil.getString(request, "tabs2", "regular-roles");
     
     String redirect = ParamUtil.getString(request, "redirect");
     String returnToFullPageURL = ParamUtil.getString(request, "returnToFullPageURL");
     
     String modelResource = ParamUtil.getString(request, "modelResource");
     String modelResourceDescription = ParamUtil.getString(request, "modelResourceDescription");
     String modelResourceName = ResourceActionsUtil.getModelResource(request, modelResource);
     
     long resourceGroupId = ParamUtil.getLong(request, "resourceGroupId");
     
     String resourcePrimKey = ParamUtil.getString(request, "resourcePrimKey");
     
     if (Validator.isNull(resourcePrimKey)) {
     	throw new ResourcePrimKeyException();
     }
     
     String selResource = modelResource;
     String selResourceDescription = modelResourceDescription;
     String selResourceName = modelResourceName;
     
     if (Validator.isNull(modelResource)) {
     	PortletURL portletURL = new PortletURLImpl(request, portletResource, plid, PortletRequest.ACTION_PHASE);
     
     	portletURL.setPortletMode(PortletMode.VIEW);
     	portletURL.setWindowState(WindowState.NORMAL);
     
     	redirect = portletURL.toString();
     
     	Portlet portlet = PortletLocalServiceUtil.getPortletById(company.getCompanyId(), portletResource);
     
     	selResource = portlet.getRootPortletId();
     	selResourceDescription = PortalUtil.getPortletTitle(portlet, application, locale);
     	selResourceName = LanguageUtil.get(request, "portlet");
     }
     else {
     	PortalUtil.addPortletBreadcrumbEntry(request, HtmlUtil.unescape(selResourceDescription), null);
     	PortalUtil.addPortletBreadcrumbEntry(request, LanguageUtil.get(request, "permissions"), currentURL);
     }
     
     long groupId = themeDisplay.getScopeGroupId();
     
     if (resourceGroupId > 0) {
     	groupId = resourceGroupId;
     }
     
     Group group = GroupLocalServiceUtil.getGroup(groupId);
     
     Layout selLayout = null;
     
     if (modelResource.equals(Layout.class.getName())) {
     	selLayout = LayoutLocalServiceUtil.getLayout(GetterUtil.getLong(resourcePrimKey));
     
     	group = selLayout.getGroup();
     	groupId = group.getGroupId();
     }
     
     Resource resource = null;
     
     try {
     	if (ResourceBlockLocalServiceUtil.isSupported(selResource)) {
     		ResourceBlockLocalServiceUtil.verifyResourceBlockId(company.getCompanyId(), selResource, Long.valueOf(resourcePrimKey));
     	}
     	else {
     		if (ResourcePermissionLocalServiceUtil.getResourcePermissionsCount(company.getCompanyId(), selResource, ResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey) == 0) {
     			throw new NoSuchResourceException();
     		}
     	}
     	resource = ResourceLocalServiceUtil.getResource(company.getCompanyId(), selResource, ResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey);
     }
     catch (NoSuchResourceException nsre) {
     	boolean portletActions = Validator.isNull(modelResource);
     
     	ResourceLocalServiceUtil.addResources(company.getCompanyId(), groupId, 0, selResource, resourcePrimKey, portletActions, true, true);
     
     	resource = ResourceLocalServiceUtil.getResource(company.getCompanyId(), selResource, ResourceConstants.SCOPE_INDIVIDUAL, resourcePrimKey);
     }
     
     String roleTypesParam = ParamUtil.getString(request, "roleTypes");
     
     int[] roleTypes = null;
     
     if (Validator.isNotNull(roleTypesParam)) {
     	roleTypes = StringUtil.split(roleTypesParam, 0);
     }
     
     PortletURL actionPortletURL = renderResponse.createActionURL();
     
     actionPortletURL.setParameter("struts_action", "/portlet_configuration/edit_permissions");
     actionPortletURL.setParameter("tabs2", tabs2);
     actionPortletURL.setParameter("redirect", redirect);
     actionPortletURL.setParameter("returnToFullPageURL", returnToFullPageURL);
     actionPortletURL.setParameter("portletResource", portletResource);
     actionPortletURL.setParameter("modelResource", modelResource);
     actionPortletURL.setParameter("modelResourceDescription", modelResourceDescription);
     actionPortletURL.setParameter("resourceGroupId", String.valueOf(resourceGroupId));
     actionPortletURL.setParameter("resourcePrimKey", resourcePrimKey);
     actionPortletURL.setParameter("roleTypes", roleTypesParam);
     
     PortletURL renderPortletURL = renderResponse.createRenderURL();
     
     renderPortletURL.setParameter("struts_action", "/portlet_configuration/edit_permissions");
     renderPortletURL.setParameter("tabs2", tabs2);
     renderPortletURL.setParameter("redirect", redirect);
     renderPortletURL.setParameter("returnToFullPageURL", returnToFullPageURL);
     renderPortletURL.setParameter("portletResource", portletResource);
     renderPortletURL.setParameter("modelResource", modelResource);
     renderPortletURL.setParameter("modelResourceDescription", modelResourceDescription);
     renderPortletURL.setParameter("resourceGroupId", String.valueOf(resourceGroupId));
     renderPortletURL.setParameter("resourcePrimKey", resourcePrimKey);
     renderPortletURL.setParameter("roleTypes", roleTypesParam);
     
     long controlPanelPlid = PortalUtil.getControlPanelPlid(company.getCompanyId());
     
     PortletURLImpl definePermissionsURL = new PortletURLImpl(request, PortletKeys.ROLES_ADMIN, controlPanelPlid, PortletRequest.RENDER_PHASE);
     
     definePermissionsURL.setParameter("struts_action", "/roles_admin/edit_role_permissions");
     definePermissionsURL.setParameter(Constants.CMD, Constants.VIEW);
     definePermissionsURL.setPortletMode(PortletMode.VIEW);
     definePermissionsURL.setRefererPlid(plid);
     














 response.write( redirect );
       response.write( false )+response.write(request.getAttribute(" false "));
       response.write( HtmlUtil.unescape(selResourceDescription) );




       
     		boolean filterGroupRoles = !ResourceActionsUtil.isPortalModelResource(modelResource);
     
     		List<String> actions = ResourceActionsUtil.getResourceActions(portletResource, modelResource);
     
     		if (modelResource.equals(Group.class.getName())) {
     			long modelResourceGroupId = GetterUtil.getLong(resourcePrimKey);
     
     			Group modelResourceGroup = GroupLocalServiceUtil.getGroup(modelResourceGroupId);
     
     			if (modelResourceGroup.isLayoutPrototype() || modelResourceGroup.isLayoutSetPrototype() || modelResourceGroup.isUserGroup()) {
     				actions = new ArrayList<String>(actions);
     
     				actions.remove(ActionKeys.ADD_LAYOUT_BRANCH);
     				actions.remove(ActionKeys.ADD_LAYOUT_SET_BRANCH);
     				actions.remove(ActionKeys.ASSIGN_MEMBERS);
     				actions.remove(ActionKeys.ASSIGN_USER_ROLES);
     				actions.remove(ActionKeys.MANAGE_ANNOUNCEMENTS);
     				actions.remove(ActionKeys.MANAGE_STAGING);
     				actions.remove(ActionKeys.MANAGE_TEAMS);
     				actions.remove(ActionKeys.PUBLISH_STAGING);
     				actions.remove(ActionKeys.PUBLISH_TO_REMOTE);
     				actions.remove(ActionKeys.VIEW_MEMBERS);
     				actions.remove(ActionKeys.VIEW_STAGING);
     			}
     		}
     		else if (modelResource.equals(Role.class.getName())) {
     			long modelResourceRoleId = GetterUtil.getLong(resourcePrimKey);
     
     			Role modelResourceRole = RoleLocalServiceUtil.getRole(modelResourceRoleId);
     
     			String name = modelResourceRole.getName();
     
     			if (name.equals(RoleConstants.GUEST) || name.equals(RoleConstants.USER)) {
     				actions = new ArrayList<String>(actions);
     
     				actions.remove(ActionKeys.ASSIGN_MEMBERS);
     				actions.remove(ActionKeys.DEFINE_PERMISSIONS);
     				actions.remove(ActionKeys.DELETE);
     				actions.remove(ActionKeys.PERMISSIONS);
     				actions.remove(ActionKeys.UPDATE);
     				actions.remove(ActionKeys.VIEW);
     			}
     
     			if ((modelResourceRole.getType() == RoleConstants.TYPE_ORGANIZATION) || (modelResourceRole.getType() == RoleConstants.TYPE_SITE)) {
     				filterGroupRoles = true;
     			}
     		}
     
     		List<Role> roles = ListUtil.copy(ResourceActionsUtil.getRoles(company.getCompanyId(), group, modelResource, roleTypes));
     
     		Role administratorRole = RoleLocalServiceUtil.getRole(company.getCompanyId(), RoleConstants.ADMINISTRATOR);
     
     		roles.remove(administratorRole);
     
     		if (filterGroupRoles) {
     			Role organizationAdministratorRole = RoleLocalServiceUtil.getRole(company.getCompanyId(), RoleConstants.ORGANIZATION_ADMINISTRATOR);
     
     			roles.remove(organizationAdministratorRole);
     
     			Role organizationOwnerRole = RoleLocalServiceUtil.getRole(company.getCompanyId(), RoleConstants.ORGANIZATION_OWNER);
     
     			roles.remove(organizationOwnerRole);
     
     			Role siteAdministratorRole = RoleLocalServiceUtil.getRole(company.getCompanyId(), RoleConstants.SITE_ADMINISTRATOR);
     
     			roles.remove(siteAdministratorRole);
     
     			Role siteOwnerRole = RoleLocalServiceUtil.getRole(company.getCompanyId(), RoleConstants.SITE_OWNER);
     
     			roles.remove(siteOwnerRole);
     		}
     
     		long modelResourceRoleId = 0;
     
     		if (modelResource.equals(Role.class.getName())) {
     			modelResourceRoleId = GetterUtil.getLong(resourcePrimKey);
     		}
     
     		roles.addAll(RoleLocalServiceUtil.getTeamRoles(groupId, new long[] {modelResourceRoleId}));
     
     		Iterator<Role> itr = roles.iterator();
     
     		while (itr.hasNext()) {
     			Role role = itr.next();
     
     			String name = role.getName();
     
     			if (!name.equals(RoleConstants.GUEST) && !RolePermissionUtil.contains(permissionChecker, groupId, role.getRoleId(), ActionKeys.VIEW) && (!role.isTeam() || !TeamPermissionUtil.contains(permissionChecker, role.getClassPK(), ActionKeys.PERMISSIONS))) {
     				itr.remove();
     			}
     
     			if (name.equals(RoleConstants.GUEST) && modelResource.equals(Layout.class.getName())) {
     				Layout resourceLayout = LayoutLocalServiceUtil.getLayout(GetterUtil.getLong(resourcePrimKey));
     
     				if (resourceLayout.isPrivateLayout()) {
     					Group resourceLayoutGroup = resourceLayout.getGroup();
     
     					if (!resourceLayoutGroup.isLayoutSetPrototype()) {
     						itr.remove();
     					}
     				}
     			}
     
     			if (name.equals(RoleConstants.GUEST) && Validator.isNotNull(portletResource)) {
     				int pos = resourcePrimKey.indexOf(PortletConstants.LAYOUT_SEPARATOR);
     
     				if (pos > 0) {
     					long resourcePlid = GetterUtil.getLong(resourcePrimKey.substring(0, pos));
     
     					Layout resourceLayout = LayoutLocalServiceUtil.getLayout(resourcePlid);
     
     					if (resourceLayout.isPrivateLayout()) {
     						Group resourceLayoutGroup = resourceLayout.getGroup();
     
     						if (!resourceLayoutGroup.isLayoutPrototype() && !resourceLayoutGroup.isLayoutSetPrototype()) {
     							itr.remove();
     						}
     					}
     				}
     			}
     		}
     		



       response.write( roles )+response.write(request.getAttribute(" roles "));
     response.write( roles.size() )+response.write(request.getAttribute(" roles").size() );




    response.write( true )+response.write(request.getAttribute(" true "));




 
     				String definePermissionsHREF = null;
     
     				String name = role.getName();
     
     				if (!name.equals(RoleConstants.ADMINISTRATOR) && !name.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) && !name.equals(RoleConstants.ORGANIZATION_OWNER) && !name.equals(RoleConstants.OWNER) && !name.equals(RoleConstants.SITE_ADMINISTRATOR) && !name.equals(RoleConstants.SITE_OWNER) && RolePermissionUtil.contains(permissionChecker, role.getRoleId(), ActionKeys.DEFINE_PERMISSIONS)) {
     					definePermissionsURL.setParameter("roleId", String.valueOf(role.getRoleId()));
     
     					definePermissionsHREF = definePermissionsURL.toString();
     				}
     				


     response.write( definePermissionsHREF )+response.write(request.getAttribute(" definePermissionsHREF "));



      response.write( RolesAdminUtil.getIconCssClass(role) )+response.write(request.getAttribute(" RolesAdminUtil").getIconCssClass(role) );
       response.write( true )+response.write(request.getAttribute(" true "));
 response.write( HtmlUtil.escape(role.getTitle(locale)) )+response.write(request.getAttribute(" HtmlUtil").escape(role.getTitle(locale)) );



 
     
     				// Actions
     
     				List<String> currentIndividualActions = new ArrayList<String>();
     				List<String> currentGroupActions = new ArrayList<String>();
     				List<String> currentGroupTemplateActions = new ArrayList<String>();
     				List<String> currentCompanyActions = new ArrayList<String>();
     
     				ResourcePermissionUtil.populateResourcePermissionActionIds(groupId, role, resource, actions, currentIndividualActions, currentGroupActions, currentGroupTemplateActions, currentCompanyActions);
     
     				List<String> guestUnsupportedActions = ResourceActionsUtil.getResourceGuestUnsupportedActions(portletResource, modelResource);
     
     				// LPS-32515
     
     				if ((selLayout != null) && group.isGuest() && SitesUtil.isFirstLayout(selLayout.getGroupId(), selLayout.isPrivateLayout(), selLayout.getLayoutId())) {
     					guestUnsupportedActions = new ArrayList<String>(guestUnsupportedActions);
     
     					guestUnsupportedActions.add(ActionKeys.VIEW);
     				}
     
     				for (String action : actions) {
     					boolean checked = false;
     					boolean disabled = false;
     					String preselectedMsg = StringPool.BLANK;
     
     					if (currentIndividualActions.contains(action)) {
     						checked = true;
     					}
     
     					if (currentGroupActions.contains(action) || currentGroupTemplateActions.contains(action)) {
     						checked = true;
     						preselectedMsg = "x-is-allowed-to-do-action-x-in-all-items-of-type-x-in-x";
     					}
     
     					if (currentCompanyActions.contains(action)) {
     						checked = true;
     						preselectedMsg = "x-is-allowed-to-do-action-x-in-all-items-of-type-x-in-this-portal-instance";
     					}
     
     					if (name.equals(RoleConstants.GUEST) && guestUnsupportedActions.contains(action)) {
     						disabled = true;
     					}
     
     					if (action.equals(ActionKeys.ACCESS_IN_CONTROL_PANEL)) {
     						disabled = true;
     					}
     				


      response.write( ResourceActionsUtil.getAction(request, action) )+response.write(request.getAttribute(" ResourceActionsUtil").getAction(request, action) );


   
     						String dataMessage = StringPool.BLANK;
     
     						if (Validator.isNotNull(preselectedMsg)) {
     							dataMessage = HtmlUtil.escapeAttribute(LanguageUtil.format(request, preselectedMsg, new Object[] {role.getTitle(locale), ResourceActionsUtil.getAction(request, action), Validator.isNull(modelResource) ? selResourceDescription : ResourceActionsUtil.getModelResource(locale, resource.getName()), HtmlUtil.escape(group.getDescriptiveName(locale))}, false));
     						}
     
     						String actionSeparator = Validator.isNotNull(preselectedMsg) ? ActionUtil.PRESELECTED : ActionUtil.ACTION;
     						

       response.write( checked ? "checked" : StringPool.BLANK );response.write( Validator.isNotNull(preselectedMsg) ? "lfr-checkbox-preselected" : StringPool.BLANK );response.write( dataMessage )+response.write(request.getAttribute(" dataMessage "));response.write( disabled ? "disabled" : StringPool.BLANK );response.write( FriendlyURLNormalizerUtil.normalize(role.getName()) + actionSeparator + action );response.write( renderResponse.getNamespace() + role.getRoleId() + actionSeparator + action );


 
     				}
     				



   response.write( false )+response.write(request.getAttribute(" false "));response.write( searchContainer )+response.write(request.getAttribute(" searchContainer "));
}

}
