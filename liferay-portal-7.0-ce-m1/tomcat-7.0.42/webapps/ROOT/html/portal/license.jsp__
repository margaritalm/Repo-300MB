 package PackageNo1819713008;import _html_common_init_jsp;import com.liferay.portal.LayoutPermissionException;import com.liferay.portal.PortletActiveException;import com.liferay.portal.RequiredLayoutException;import com.liferay.portal.RequiredRoleException;import com.liferay.portal.ReservedUserEmailAddressException;import com.liferay.portal.UserActiveException;import com.liferay.portal.UserEmailAddressException;import com.liferay.portal.UserLockoutException;import com.liferay.portal.UserPasswordException;import com.liferay.portal.UserReminderQueryException;import com.liferay.portal.kernel.cluster.ClusterExecutorUtil;import com.liferay.portal.kernel.cluster.ClusterNode;import com.liferay.portal.kernel.lar.DefaultConfigurationPortletDataHandler;import com.liferay.portal.kernel.parsers.bbcode.BBCodeTranslatorUtil;import com.liferay.portal.kernel.portlet.PortletConfigurationLayoutUtil;import com.liferay.portal.kernel.servlet.HttpHeaders;import com.liferay.portal.kernel.templateparser.TransformException;import com.liferay.portal.kernel.util.ProgressTracker;import com.liferay.portal.license.util.LicenseManagerUtil;import com.liferay.portal.license.util.LicenseUtil;import com.liferay.portal.setup.SetupWizardUtil;import com.liferay.portal.struts.PortletRequestProcessor;import com.liferay.portal.util.PortletCategoryUtil;import com.liferay.portlet.usersadmin.util.UsersAdmin;import org.apache.struts.action.ActionMapping;import org.apache.struts.taglib.tiles.ComponentConstants;import org.apache.struts.tiles.ComponentDefinition;import org.apache.struts.tiles.TilesUtil; public class license_jsp {  public void Checkmarx_Class_Init(HttpServletRequest request, HttpServletResponse response, HttpSession session, ServletContext application, PageContext pageContext) {jspInit();















/* ?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\license.jsp */ /* 17?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\license.jsp */ /* 1?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 2?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 3?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 4?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 5?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 6?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 7?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 8?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 9?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 10?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 11?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 12?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 13?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 14?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 15?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 16?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 17?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 18?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 19?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 20?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 21?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 22?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 23?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 24?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 25?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 26?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 27?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 28?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 29?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 30?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 31?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 32?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 33?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 34?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 35?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 36?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 37?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 38?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 39?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 40?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 41?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 42?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 43?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 44?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 45?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 46?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ /* 47?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\init.jsp */ response.write(CxResponseWrite)+response.write(request.getAttribute("CxResponseWrite")); /* 17?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portal\license.jsp */




























     
     Map<String, String> orderProducts = (Map<String, String>)request.getAttribute("ORDER_PRODUCTS");
     
     String errorMessage = (String)request.getAttribute("ERROR_MESSAGE");
     
     boolean error = false;
     
     if (Validator.isNotNull(errorMessage)) {
     	error = true;
     }
     
     String orderUuid = ParamUtil.getString(request, "orderUuid");
     
     String[] releaseInfoArray = StringUtil.split(ReleaseInfo.getReleaseInfo(), "(");
     
     String versionInfo = releaseInfoArray[0];
     String buildInfo = StringUtil.replace(releaseInfoArray[1], ")", "");
     
     List<ClusterNode> clusterNodes = ClusterExecutorUtil.getClusterNodes();
     
     Collections.sort(clusterNodes);
     
     DateFormat dateFormatDateTime = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, locale);
     
     dateFormatDateTime.setTimeZone(timeZone);
     


   response.write( versionInfo );



   response.write( buildInfo );


     response.write( (clusterNodes.size() > 1) ? "onsubmit=\"return validateForm();\"" : "" );



    response.write( errorMessage );






       
     		String successMessage = (String)request.getAttribute("SUCCESS_MESSAGE");
     
     		Map<String, String> serverInfo = LicenseUtil.getServerInfo();
     
     		List<Map<String, String>> licenseProperties = LicenseManagerUtil.getLicenseProperties();
     		



      response.write( successMessage )+response.write(request.getAttribute(" successMessage "));































response.write( serverInfo.get("hostName") );






     
     								for (String ipAddress : StringUtil.split(serverInfo.get("ipAddresses"))) {
     								

   response.write( ipAddress )+response.write(request.getAttribute(" ipAddress "));

     
     								}
     								






     
     								for (String macAddress : StringUtil.split(serverInfo.get("macAddresses"))) {
     								

   response.write( macAddress )+response.write(request.getAttribute(" macAddress "));

     
     								}
     								







































   
     						for (int i = 0; i < licenseProperties.size(); i++) {
     							Map<String, String> curLicenseProperties = licenseProperties.get(i);
     
     							int licenseState = GetterUtil.getInteger(curLicenseProperties.get("licenseState"));
     							long startDateTime = GetterUtil.getLong(curLicenseProperties.get("startDate"));
     							long expirationDateTime = GetterUtil.getLong(curLicenseProperties.get("expirationDate"));
     							int maxConcurrentUsers = GetterUtil.getInteger(curLicenseProperties.get("maxConcurrentUsers"));
     							int maxUsers = GetterUtil.getInteger(curLicenseProperties.get("maxUsers"));
     						



   response.write( curLicenseProperties.get("productEntryName") );





















   response.write( HtmlUtil.escape(curLicenseProperties.get("owner")) );


   response.write( HtmlUtil.escape(curLicenseProperties.get("description")) );


    response.write( curLicenseProperties.get("type") );


   response.write( dateFormatDateTime.format(new Date(startDateTime)) );


   response.write( dateFormatDateTime.format(new Date(expirationDateTime)) );



       response.write( maxConcurrentUsers );



       response.write( maxUsers );




   
     						}
     						



































       
     		for (ClusterNode clusterNode : clusterNodes) {
     			String successMessage = (String)request.getAttribute(clusterNode.getClusterNodeId() + "_SUCCESS_MESSAGE");
     
     			String curErrorMessage = (String)request.getAttribute(clusterNode.getClusterNodeId() + "_ERROR_MESSAGE");
     
     			if (Validator.isNotNull(curErrorMessage)) {
     				error = true;
     			}
     		





 response.write( successMessage )+response.write(request.getAttribute(" successMessage "));









 response.write( curErrorMessage );







    response.write( true )+response.write(request.getAttribute(" true "));response.write( "node_" + clusterNode.getClusterNodeId() + "_register" );response.write( clusterNode.getClusterNodeId() + "_register" );


















 response.write(clusterNode.getClusterNodeId())+response.write(request.getAttribute("clusterNode").getClusterNodeId());


  response.write(clusterNode.getClusterNodeId())+response.write(request.getAttribute("clusterNode").getClusterNodeId());
  response.write(clusterNode.getClusterNodeId())+response.write(request.getAttribute("clusterNode").getClusterNodeId());




response.write(clusterNode.getClusterNodeId())+response.write(request.getAttribute("clusterNode").getClusterNodeId());

  response.write(true)+response.write(request.getAttribute("true"));response.write( themeDisplay.getPathThemeImages() )+response.write(request.getAttribute(" themeDisplay").getPathThemeImages() );




response.write(clusterNode.getClusterNodeId())+response.write(request.getAttribute("clusterNode").getClusterNodeId());




























response.write(clusterNode.getClusterNodeId())+response.write(request.getAttribute("clusterNode").getClusterNodeId());

  response.write(true)+response.write(request.getAttribute("true"));response.write( themeDisplay.getPathThemeImages() )+response.write(request.getAttribute(" themeDisplay").getPathThemeImages() );





       
     		}
     		












  response.write( themeDisplay.getPathMain() + "/portal/license" );







  response.write( Constants.CMD )+response.write(request.getAttribute(" Constants").CMD );






























     			for (ClusterNode clusterNode : clusterNodes) {
     			



response.write( clusterNode.getClusterNodeId() )+response.write(request.getAttribute(" clusterNode").getClusterNodeId() );
response.write( clusterNode.getBindInetAddress().getHostAddress() )+response.write(request.getAttribute(" clusterNode").getBindInetAddress().getHostAddress() );
response.write( clusterNode.getPortalPort() )+response.write(request.getAttribute(" clusterNode").getPortalPort() );







     response.write( clusterNode.getClusterNodeId() )+response.write(request.getAttribute(" clusterNode").getClusterNodeId() );response.write( clusterNode.getPortalPort() )+response.write(request.getAttribute(" clusterNode").getPortalPort() );response.write( (clusterNode.getPortalPort() == -1) ? "*" : "" );
     response.write( clusterNode.getClusterNodeId() )+response.write(request.getAttribute(" clusterNode").getClusterNodeId() );
     response.write( clusterNode.getClusterNodeId() )+response.write(request.getAttribute(" clusterNode").getClusterNodeId() );





response.write( clusterNode.getClusterNodeId() )+response.write(request.getAttribute(" clusterNode").getClusterNodeId() );
response.write( clusterNode.getBindInetAddress().getHostAddress() )+response.write(request.getAttribute(" clusterNode").getBindInetAddress().getHostAddress() );
response.write( clusterNode.getPortalPort() )+response.write(request.getAttribute(" clusterNode").getPortalPort() );





     response.write( clusterNode.getClusterNodeId() )+response.write(request.getAttribute(" clusterNode").getClusterNodeId() );


      response.write( clusterNode.getClusterNodeId() )+response.write(request.getAttribute(" clusterNode").getClusterNodeId() );






 response.write( clusterNode.getClusterNodeId() )+response.write(request.getAttribute(" clusterNode").getClusterNodeId() );


































      response.write( clusterNode.getClusterNodeId() )+response.write(request.getAttribute(" clusterNode").getClusterNodeId() );





     			}
     			





















































      response.write( HtmlUtil.escape(orderUuid) );

       response.write(HtmlUtil.getEscapeAttribute(orderUuid));


       response.write(HtmlUtil.getEscapeAttribute(orderUuid));














 
     				for (Map.Entry<String, String> entry : orderProducts.entrySet()) {
     					String key = entry.getKey();
     
     					String licensesLeft = LanguageUtil.get(request, entry.getValue());
     				



      response.write( new String[] {licensesLeft, licensesLeft.equals("1") ? "license" : "licenses"} );
      response.write( new String[] {licensesLeft, licensesLeft.equals("1") ? "license" : "licenses"} );


  response.write(key);     response.write( new String[] {licensesLeft, licensesLeft.equals("1") ? "server" : "servers"} );


  response.write(key);     response.write( new String[] {key, licensesLeft, licensesLeft.equals("1") ? "license" : "licenses"} );



 
     				}
     				







































     response.write(themeDisplay.getURLCurrent())+response.write(request.getAttribute("themeDisplay").getURLCurrent());
}

}
